<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fh.mapper.dsno1.warranty.MailConfigMapper">

	<!--表名 -->
	<sql id="tableName">
		BX_MAILCONFIG
	</sql>

	<!--数据字典表名 -->
	<sql id="dicTableName">
		SYS_DICTIONARIES
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		f.ADDRESS,
		f.PWD,
		f.SMTP,
		f.POP3,
		f.CONFIG_USER,
		f.CONFIG_DATE,
		f.MARK,
		f.STATE,
		f.MAILCONFIG_ID,
		f.SMTPPORT,
		f.POP3PORT,
		f.IMAP,
		f.IMAPPORT,
		f.DEPT,
		f.PROJ
	</sql>

	<!-- 字段用于新增 -->
	<sql id="Field2">
		ADDRESS,
		PWD,
		SMTP,
		POP3,
		CONFIG_USER,
		CONFIG_DATE,
		MARK,
		STATE,
		MAILCONFIG_ID,
		SMTPPORT,
		POP3PORT,
		IMAP,
		IMAPPORT,
		DEPT,
		PROJ
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{ADDRESS},
		#{PWD},
		#{SMTP},
		#{POP3},
		#{CONFIG_USER},
		#{CONFIG_DATE},
		#{MARK},
		#{STATE},
		#{MAILCONFIG_ID},
		#{SMTPPORT},
		#{POP3PORT},
		#{IMAP},
		#{IMAPPORT},
		#{DEPT},
		#{PROJ}
	</sql>

	<!-- 新增 -->
	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field2"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>

	<!-- 删除 -->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where
		MAILCONFIG_ID = #{MAILCONFIG_ID}
	</delete>

	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
		ADDRESS = #{ADDRESS},
		PWD = #{PWD},
		SMTP = #{SMTP},
		POP3 = #{POP3},
		IMAP = #{IMAP},
		SMTPPORT = #{SMTPPORT},
		POP3PORT = #{POP3PORT},
		IMAPPORT
		= #{IMAPPORT},
		DEPT = #{DEPT},
		PROJ = #{PROJ},
		MARK = #{MARK},
		STATE =
		#{STATE},
		CONFIG_USER =
		#{CONFIG_USER},
		CONFIG_DATE = #{CONFIG_DATE},
		MAILCONFIG_ID =
		MAILCONFIG_ID
		where
		MAILCONFIG_ID = #{MAILCONFIG_ID}
	</update>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		f
		where
		f.MAILCONFIG_ID = #{MAILCONFIG_ID}
		and
		f.STATE = '1'
	</select>

	<!-- 通过邮箱地址获取数据 -->
	<select id="findByAddress" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		f
		where
		f.ADDRESS = #{ADDRESS}
		and
		f.STATE = '1'
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		f
		where 1=1
		and
		f.STATE = '1'
		<if test="pd.DEPT != null and pd.DEPT != ''"><!-- 只能查看本部门邮箱 -->
			and
			(
			f.DEPT LIKE CONCAT(CONCAT('%', #{pd.DEPT}),'%')
			)
		</if>
		<if test="pd.KEYWORDS != null and pd.KEYWORDS != ''"><!-- 关键词检索 -->
			and
			(
			f.ADDRESS LIKE CONCAT(CONCAT('%', #{pd.KEYWORDS}),'%') or
			f.MARK
			LIKE CONCAT(CONCAT('%', #{pd.KEYWORDS}),'%')
			)
		</if>
	</select>

	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		f
		where f.STATE = '1'
		<if test="DEPT != null and DEPT != ''"><!-- 只能查看本部门邮箱 -->
			and
			(
			f.DEPT LIKE CONCAT(CONCAT('%', #{DEPT}),'%')
			)
		</if>
	</select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
		MAILCONFIG_ID in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>


</mapper>